{"version":3,"sources":["api/api.js","slices/forumSlice.js","components/Feed/ForumTile.js","components/Feed/ForumTileX.js","components/Feed/Feed.js","components/Home/Home.js","components/Nav/logo.png","components/Nav/Navbar.js","components/Home/Login.js","components/Community/CreateCommunity.js","components/Community/CommunityJoinTile.js","components/Community/AllCommunities.js","components/Community/JoinedCommunities.js","slices/communitySlice.js","components/Community/Editor.js","slices/postSlice.js","components/Post/PostShort.js","components/Community/CommunityExpanded.js","components/Thread/ReplyEditor.js","components/Thread/ThreadEditor.js","components/Thread/Thread.js","components/Thread/ReplyThreadEditor.js","components/Thread/Reply.js","components/Post/PostExpanded.js","components/Home/Profile.js","App.js","app/store.js","index.js"],"names":["parsedToken","URL","jwtToken","localStorage","getItem","JSON","parse","token","createUser","data","axios","post","createNewCommunity","headers","authorization","getAllCommunities","get","joinCommunity","id","userId","createPost","postReply","postThread","upvote","downvote","communitySlice","createSlice","name","initialState","list","reducers","setCommunities","state","action","payload","addCommunity","push","clearCommunities","splice","length","actions","selectAllCommunities","communities","ForumTile","description","posts","members","history","useHistory","className","onClick","console","log","class","ForumTileX","title","Feed","dispatch","useDispatch","user","useSelector","useState","setList","useEffect","a","sort","Math","random","result","_id","getState","to","map","community","slice","Home","setName","email","setEmail","password","setPassword","handleSubmit","e","formData","setItem","stringify","window","location","reload","role","onChange","target","value","type","placeholder","navigation","href","current","classNames","classes","filter","Boolean","join","Navbar","logData","handleLogout","removeItem","as","open","Button","src","logo","alt","avatar","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","Panel","item","undefined","handleLogin","preventDefault","response","CreateCommunity","setDescription","rows","communityData","createdBy","CommunityJoinTile","router","addUserToCommunity","AllCommunities","JoinedCommunities","setPosts","addPost","clearPosts","setMembers","selectAllPosts","selectName","selectDescription","selectMembers","Editor","setEditor","quill","setQuill","setTitle","newQuill","Quill","modules","toolbar","header","theme","content","root","innerHTML","postData","body","poster","parentId","api","postSlice","replies","upvotes","downvotes","setPost","addReplies","addThread","i","replyId","thread","upvotePost","downvotePost","selectReplies","selectTitle","selectBody","selectVotes","threadData","asyncUpvote","asyncDownvote","PostShort","cleanBody","sanitize","allowedTags","allowedAttributes","CommunityExpanded","useParams","editor","loading","setLoading","communityId","loadPosts","color","height","width","reverse","ReplyEditor","replyData","ThreadEditor","setParent","parent","Thread","setReplies","username","setUsername","setAvatar","replyBody","dangerouslySetInnerHTML","__html","child","ReplyThreadEditor","Reply","reply","PostExpanded","votes","find","postId","loadPost","Profile","App","path","exact","store","configureStore","reducer","communitiesReducer","communityReducer","postReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36dad983.chunk.js","sourcesContent":["import axios from 'axios'\r\n//const URL=\"http://localhost:5000\"\r\nconst URL=\"http://gabfestforum.herokuapp.com\"\r\nconst jwtToken=localStorage.getItem('gabprofile')\r\nvar parsedToken\r\nif (jwtToken!=null)\r\n{\r\n    parsedToken=JSON.parse(jwtToken).token\r\n}\r\n\r\nexport const createUser=(data)=>axios.post(`${URL}/user`, data)\r\n\r\nexport const loginUser=(data)=>axios.post(`${URL}/user/login`, data)\r\n\r\nexport const getCommunityPosts=(id)=>axios.get(`${URL}/community/${id}/posts`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const createNewCommunity=(data)=>axios.post(`${URL}/community`, data, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getJoinedCommunities=(id)=>axios.get(`${URL}/user/${id}/communities`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getAllCommunities=()=>axios.get(`${URL}/communities`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const joinCommunity=({id, userId})=>axios.post(`${URL}/community/${id}/add_user`, {\r\n    userId: userId\r\n}, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const createPost=(data)=>axios.post(`${URL}/post`, data, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getPost=(id)=>axios.get(`${URL}/post/${id}`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const postReply=(data)=>axios.post(`${URL}/post_thread`, data, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const postThread=(data)=>axios.post(`${URL}/thread`, data, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getThreadById=(id)=>axios.get(`${URL}/thread/${id}`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getPostsByUserId=(id)=>axios.get(`${URL}/posts/${id}`, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const upvote=(id)=>axios.post(`${URL}/post/${id}/upvote`, {data:null }, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const downvote=(id)=>axios.post(`${URL}/post/${id}/downvote`, {data: null}, {\r\n    headers: {\r\n        authorization: 'Bearer '+parsedToken\r\n    }\r\n})\r\n\r\nexport const getAllUsers=()=>axios.get(`${URL}/users`)","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { createNewCommunity, getJoinedCommunities, joinCommunity } from '../api/api';\r\n\r\nconst initialState={\r\n    list: []\r\n}\r\n\r\nexport const communitySlice=createSlice({name: 'communities',\r\n    initialState, \r\n    reducers: {\r\n        setCommunities: (state, action)=>\r\n        {\r\n            state.list=action.payload\r\n        },\r\n        addCommunity: (state, action)=>\r\n        {\r\n            state.list.push(action.payload)\r\n        },\r\n        clearCommunities: (state, action)=>\r\n        {\r\n            state.list.splice(0, state.list.length)\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setCommunities, addCommunity, clearCommunities}=communitySlice.actions\r\n\r\n//Selectors\r\nexport const selectAllCommunities=(state)=>state.communities.list\r\n\r\nexport const selectCommunity=(state, id)=>state.communities.list.find(id)\r\n\r\n//Thunks\r\nexport const loadCommunities=(userId)=>async (dispatch, getState)=>\r\n{\r\n    const {data}=await getJoinedCommunities(userId)\r\n    console.log(\"Loading communities\")\r\n    console.log(data)\r\n    dispatch(setCommunities(data))\r\n\r\n}\r\n\r\nexport const createCommunity=(communityData)=>async(dispatch)=> //history can be passed alongwith communityData in order to be able to redirect\r\n{\r\n    console.log(\"The thunk has been reached\")\r\n    const {data}=await createNewCommunity(communityData)\r\n    dispatch(addCommunity(data))\r\n}\r\n\r\nexport const addUserToCommunity=(id, userId, router)=>async(dispatch)=>\r\n{\r\n    console.log(\"User adding process started\")\r\n    const {data}=await joinCommunity({id, userId})\r\n    dispatch(addCommunity(data))\r\n    router.push('/communities/joined')\r\n\r\n}\r\n\r\n\r\nexport default communitySlice.reducer","import React from 'react'\r\nimport {ChatIcon, UsersIcon} from '@heroicons/react/outline'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default function ForumTile({name, description, posts, members, id}) {\r\n    const history=useHistory()\r\n    const openCommunity=()=>\r\n    {\r\n        console.log(\"Clicked on Open Community\")\r\n        history.push(`/community/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"shadow-md border-2 p-6\">\r\n            <h1 onClick={openCommunity} className=\"text-lg font-semibold cursor-pointer\">{name}</h1>\r\n            <p class=\"text-gray-500\">{description}</p>\r\n            <p class=\"text-gray-500\"><ChatIcon className=\"h-5 w-5 inline\" />{posts?posts.length:0} <UsersIcon className=\"h-4 w-4 inline\"/>{members?members.length:0}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {ChatIcon, UsersIcon} from '@heroicons/react/outline'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default function ForumTileX({title, description, id}) {\r\n    const history=useHistory()\r\n    const openCommunity=()=>\r\n    {\r\n        console.log(\"Clicked on Open Community\")\r\n        history.push(`/community/${id}`)\r\n    }\r\n    return (\r\n        <div className=\"shadow-md border-2 p-6\">\r\n            <h1 onClick={openCommunity} className=\"text-lg font-semibold cursor-pointer\">{title}</h1>\r\n            <p className=\"text-gray-500\">{description}</p>\r\n            <p className=\"text-gray-500\"><ChatIcon className=\"h-5 w-5 inline\" />12 <UsersIcon className=\"h-4 w-4 inline\"/> 5</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { loadCommunities, selectAllCommunities } from '../../slices/forumSlice'\r\nimport ForumTile from './ForumTile'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ForumTileX from './ForumTileX'\r\nimport { getAllCommunities } from '../../api/api'\r\n\r\nexport default function Feed() {\r\n    const dispatch = useDispatch()\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const communities=useSelector(selectAllCommunities)\r\n    \r\n    const [list, setList]=useState([])\r\n    useEffect(async ()=>\r\n    {\r\n        const {data}=await getAllCommunities()\r\n        shuffle(data)\r\n        setList(data)\r\n       \r\n    }, [])\r\n    useEffect(()=>\r\n    {\r\n      if (user)\r\n      {\r\n          dispatch(loadCommunities(user.result._id))\r\n      }\r\n    },[])\r\n    function shuffle(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n      }\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"bg-gray-300 grid grid-cols-5 gap-2\">\r\n            <div></div>\r\n            <div className=\"bg-white col-span-3 border-2 border-gray-400 p-2\">\r\n                <div className=\"border-gray-400 border-2 m-4 p-3\">\r\n                <span className=\"flex justify-between\"><h1 className=\"text-xl font-sans font-semibold inline\">Your Communities! </h1>  <Link className=\"inline text-gray-400 hover:underline\" to='/communities/joined'>View all</Link> </span>\r\n                    <div className=\"grid grid-cols-3 gap-1\">\r\n                       {\r\n                           communities.map((community)=>(\r\n                                <ForumTile name={community.name} description={community.description} id={community._id} posts={community.posts} members={community.members}/>\r\n                           ))\r\n                       }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"border-gray-400 border-2 m-4 p-3\">\r\n                <span className=\"flex justify-between\"><h1 className=\"text-xl font-sans font-semibold inline\">Discover Communities! </h1>  <Link className=\"inline text-gray-400 hover:underline\" to='/communities/all'>View all</Link> </span>\r\n                    <div className=\"grid grid-cols-3 gap-1 mb-5\">\r\n                        {\r\n                            list.slice(0,6).map((community)=>(\r\n                                <ForumTile name={community.name} description={community.description} id={community._id} posts={community.posts} members={community.members}/>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"border-gray-400 border-2 m-4 p-3\">\r\n                    <span className=\"flex justify-between\"><h1 className=\"text-xl font-sans font-semibold inline\">General Discussion </h1>  <Link className=\"inline text-gray-400 hover:underline\" to='/communities/all'>View all</Link> </span> \r\n                    <div className=\"grid grid-cols-3 gap-1\">\r\n                        <ForumTile />\r\n                        <ForumTile />\r\n                        <ForumTile />\r\n                        <ForumTile />\r\n                        <ForumTile />\r\n                        <ForumTile />\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { createUser } from '../../api/api'\r\nimport { useHistory } from 'react-router'\r\nimport Feed from '../Feed/Feed'\r\n\r\nexport default function Home() {\r\n    const history=useHistory()\r\n    const user=localStorage.getItem('gabprofile')\r\n    //Form State\r\n    const [name, setName]=useState('')\r\n    const [email, setEmail]=useState('')\r\n    const [password, setPassword]=useState('')\r\n    \r\n\r\n    \r\n    //Form Change Functions\r\n    const handleNameChange=(e)=>\r\n    {\r\n        setName(e.target.value)\r\n    }\r\n    const handleEmailChange=(e)=>\r\n    {\r\n        setEmail(e.target.value)\r\n    }\r\n    const handlePasswordChange=(e)=>\r\n    {\r\n        setPassword(e.target.value)\r\n    }   \r\n\r\n    const handleSubmit=async (e)=>\r\n    {\r\n        const formData={\r\n            name: name,\r\n            email: email,\r\n            password: password\r\n        }\r\n        console.log(formData)\r\n        const {data}=await createUser(formData)\r\n        console.log(data)\r\n        localStorage.setItem('gabprofile', JSON.stringify(data))\r\n        window.location.reload()\r\n        history.push('/feed')\r\n\r\n\r\n    }\r\n\r\n    const redirectToLogin=()=>\r\n    {\r\n        history.push('/login')\r\n    }\r\n    if (!user)\r\n    {\r\n        return (\r\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        \r\n                    <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n        \r\n                    \r\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n        \r\n                \r\n                    <div className=\"inline-block align-bottom bg-white px-10 py-10 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n                    <h1 className=\"text-2xl mb-5\"> Sign Up </h1>\r\n                    <div>\r\n                    <input  onChange={handleNameChange} className=\"shadow appearance-none border rounded w-3/4 py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"text\" placeholder=\"Name\"/>\r\n                        <input  onChange={handleEmailChange} className=\"shadow appearance-none border rounded w-3/4 py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"text\" placeholder=\"Email\"/>\r\n                        <input onChange={handlePasswordChange} className=\"shadow appearance-none border rounded w-3/4 py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"password\" placeholder=\"Password\"/>\r\n                        <button onClick={handleSubmit} className=\"block bg-blue-400 hover:bg-blue-600 transition duration-1000 text-white rounded-full py-2 px-8\">Sign Up</button>\r\n                        <p>Already hooked to Gabfest? <button onClick={redirectToLogin} className=\" bg-green-400 transition duration-1000 hover:bg-green-600 text-white rounded-full py-2 px-8\">Log in</button></p>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                )\r\n    }\r\n    else\r\n    {\r\n        return (<Feed />)\r\n    }\r\n    \r\n    }\r\n","export default __webpack_public_path__ + \"static/media/logo.4b7b7794.png\";","import { Fragment } from 'react'\r\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\r\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport logo from './logo.png'\r\n\r\nconst navigation = [\r\n  { name: 'Communities', href: '#', current: true },\r\n  { name: 'Team', href: '#', current: false },\r\n  { name: 'Projects', href: '#', current: false },\r\n  { name: 'Calendar', href: '#', current: false },\r\n]\r\n\r\nfunction classNames(...classes) {\r\n  return classes.filter(Boolean).join(' ')\r\n}\r\n\r\n\r\nexport default function Navbar() {\r\n  const history=useHistory()\r\n  const logData=JSON.parse(localStorage.getItem('gabprofile'))\r\n  console.log(logData)\r\n  const handleLogout=()=>\r\n  {\r\n    localStorage.removeItem('gabprofile')\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex items-center justify-between h-16\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                {/* Mobile menu button*/}\r\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Disclosure.Button>\r\n              </div>\r\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  <img\r\n                    className=\"block lg:hidden h-32 w-auto\"\r\n                    src={logo}\r\n                    alt=\"Workflow\"\r\n                  />\r\n                  <img\r\n                    className=\"hidden lg:block h-32 w-auto\"\r\n                    src={logo}\r\n                    alt=\"Workflow\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"bg-gray-800 p-1 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\r\n                >\r\n                  <span className=\"sr-only\">View notifications</span>\r\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                </button>\r\n\r\n                {/* Profile dropdown */}\r\n                <Menu as=\"div\" className=\"ml-3 relative\">\r\n                  <div>\r\n                    <Menu.Button className=\"bg-gray-800 flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n                      <span className=\"sr-only\">Open user menu</span>\r\n                      <img\r\n                        className=\"h-8 w-8 rounded-full\"\r\n                        src={logData?logData.result.avatar:\"https://avatars.dicebear.com/api/bottts/Sam Houser.svg\"}\r\n                        alt=\"\"\r\n                      />\r\n                    \r\n                    </Menu.Button>\r\n                  </div>\r\n                  <Transition\r\n                    as={Fragment}\r\n                    enter=\"transition ease-out duration-100\"\r\n                    enterFrom=\"transform opacity-0 scale-95\"\r\n                    enterTo=\"transform opacity-100 scale-100\"\r\n                    leave=\"transition ease-in duration-75\"\r\n                    leaveFrom=\"transform opacity-100 scale-100\"\r\n                    leaveTo=\"transform opacity-0 scale-95\"\r\n                  >\r\n                    <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            href=\"#\"\r\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\r\n                          >\r\n                            Your Profile\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            href=\"#\"\r\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700')}\r\n                          >\r\n                            Settings\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                      \r\n                      <Menu.Item>\r\n                        {({ active }) => (\r\n                          <a\r\n                            onClick={handleLogout}\r\n                            className={classNames(active ? 'bg-gray-100' : '', 'block px-4 py-2 text-sm text-gray-700 cursor-pointer')}\r\n                          >\r\n                            Sign out\r\n                          </a>\r\n                        )}\r\n                      </Menu.Item>\r\n                    </Menu.Items>\r\n                  </Transition>\r\n                </Menu>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"sm:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n              {navigation.map((item) => (\r\n                <a\r\n                  key={item.name}\r\n                  href={item.href}\r\n                  className={classNames(\r\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                    'block px-3 py-2 rounded-md text-base font-medium'\r\n                  )}\r\n                  aria-current={item.current ? 'page' : undefined}\r\n                >\r\n                  {item.name}\r\n                </a>\r\n              ))}\r\n            </div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { loginUser } from '../../api/api'\r\nimport { useHistory } from 'react-router'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nexport default function Home() {\r\n    const history=useHistory()\r\n    //Form State\r\n    const [email, setEmail]=useState('')\r\n    const [password, setPassword]=useState('')\r\n\r\n    const redirectToSignup=()=>\r\n    {\r\n        history.push('/')\r\n    }\r\n\r\n    const handleEmailChange=(e)=>\r\n    {\r\n        setEmail(e.target.value)\r\n    }\r\n    const handlePasswordChange=(e)=>\r\n    {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const handleLogin=async (e)=>\r\n    {\r\n        e.preventDefault()\r\n        const formData={\r\n            email: email,\r\n            password: password\r\n        }\r\n        console.log(\"Login Being attempted\")\r\n        console.log(formData)\r\n        try{\r\n            const response=await loginUser(formData)\r\n            console.log(response)\r\n            localStorage.setItem('gabprofile', JSON.stringify(response.data))\r\n            history.push('/feed')\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n   \r\n    return (\r\n    <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n            \r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n        \r\n            <div className=\"inline-block align-bottom bg-white px-10 py-10 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <h1 className=\"text-2xl mb-5\"> Sign Up </h1>\r\n            <div>\r\n                <input onChange={handleEmailChange} className=\"shadow appearance-none border rounded w-3/4 py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"text\" placeholder=\"Email\"/>\r\n                <input onChange={handlePasswordChange}  className=\"shadow appearance-none border rounded w-3/4 py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"password\" placeholder=\"Password\"/>\r\n                <button onClick={handleLogin} className=\"block bg-green-400 hover:bg-green-600 transition duration-1000 text-white rounded-full py-2 px-8\">Log in</button>\r\n                <p>Don't have an account? <button onClick={redirectToSignup} className=\" bg-blue-400 inline transition duration-1000 hover:bg-blue-600 text-white rounded-full py-2 px-8\">Sign Up</button></p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n","import React, {useState} from 'react'\r\nimport { createCommunity } from '../../slices/forumSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function CreateCommunity() {\r\n   const dispatch = useDispatch()\r\n   const [name, setName]=useState('')\r\n   const [description, setDescription]=useState('')\r\n   const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n\r\n    const handleNameChange=(e)=>\r\n    {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleDescriptionChange=(e)=>\r\n    {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    const handleSubmit=()=>\r\n    {\r\n        const formData={\r\n            name: name,\r\n            description: description,\r\n            createdBy: user.result._id\r\n        }\r\n        console.log(formData)\r\n        console.log(\"Create was clicked!\")\r\n        dispatch(createCommunity(formData))\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed z-10 inset-0 overflow-y-auto\" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n\r\n            <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\r\n\r\n            \r\n            <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\r\n\r\n        \r\n            <div className=\"inline-block align-bottom bg-white px-10 py-10 rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n            <h1 className=\"text-2xl mb-5\"> Create a New Community </h1>\r\n            <div>\r\n                <input onChange={handleNameChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"text\" placeholder=\"Name\"/>\r\n                <textarea onChange={handleDescriptionChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" rows=\"4\" placeholder=\"Description\" />\r\n                <button onClick={handleSubmit} className=\"block bg-gray-400 hover:bg-blue-600 focus:bg-blue-600 transition duration-1000 text-white rounded-full py-2 px-8\">Create</button>\r\n\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {ChatIcon, UsersIcon, CubeTransparentIcon} from '@heroicons/react/outline'\r\nimport { useHistory } from 'react-router'\r\nimport { addUserToCommunity } from '../../slices/forumSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nexport default function CommunityJoinTile({title, description, id}) {\r\n    const history=useHistory()\r\n    const dispatch = useDispatch()\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const joinCommunity=()=>\r\n    {\r\n\r\n        console.log(\"Clicked on Join Community\")\r\n        dispatch(addUserToCommunity(id, user.result._id, history))\r\n    }\r\n    const openCommunity=()=>\r\n    {\r\n        console.log(\"Clicked on Open Community\")\r\n        history.push(`/community/${id}`)\r\n    }\r\n    return (\r\n        <div  className=\"shadow-md border-2 p-6 grid grid-cols-2\">\r\n            <div>\r\n                <h1 onClick={openCommunity} className=\"text-lg font-semibold cursor-pointer\" >{title}</h1>\r\n                <p class=\"text-gray-500\">{description}</p>\r\n                <p class=\"text-gray-500\"><ChatIcon className=\"h-5 w-5 inline\" />12 <UsersIcon className=\"h-4 w-4 inline\"/> 5</p>\r\n            </div>\r\n            <div className=\"flex justify-center items-center\"> \r\n                <button onClick={joinCommunity} className=\"bg-gray-400 hover:bg-green-400 focus:bg-green-400 rounded-xl p-3\"><CubeTransparentIcon />Join</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { getAllCommunities } from '../../api/api'\r\nimport CommunityJoinTile from './CommunityJoinTile'\r\n\r\n\r\nexport default function AllCommunities() {\r\n    const [communities, setCommunities]=useState([])\r\n    useEffect(async ()=>\r\n    {\r\n        const {data}=await getAllCommunities()\r\n        shuffle(data)\r\n        setCommunities(data)\r\n        \r\n    }, [])\r\n    function shuffle(array) {\r\n        array.sort(() => Math.random() - 0.5);\r\n      }\r\n    return (\r\n        <div className=\"bg-gray-300 h-screen\">\r\n            <div className=\"bg-gray-300 grid grid-cols-5 gap-2\">\r\n            <div></div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 col-span-3 bg-white\">\r\n                {\r\n                    communities.map((community)=>(\r\n                        <CommunityJoinTile title={community.name} description={community.description} id={community._id}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectAllCommunities } from '../../slices/forumSlice'\r\nimport ForumTileX from '../Feed/ForumTileX'\r\n\r\nexport default function JoinedCommunities() {\r\n    const dispatch=useDispatch()\r\n    const communities=useSelector(selectAllCommunities)\r\n    useEffect(()=>\r\n    {\r\n        console.log(\"Printing communities\")\r\n        console.log(communities)\r\n    },[])\r\n    return (\r\n        <div className=\"bg-gray-300 h-auto grid grid-cols-5 gap-2\">\r\n            <div></div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 col-span-3 bg-white\">\r\n                \r\n                    {\r\n                        communities.map((community)=>(\r\n                            <ForumTileX title={community.name} description={community.description} id={community._id}/>\r\n                        ))\r\n                    }\r\n                \r\n\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport * as api from '../api/api';\r\n\r\nconst initialState={\r\n    posts: [],\r\n    name: \"\",\r\n    description: \"\",\r\n    members: []\r\n}\r\n\r\nexport const communitySlice=createSlice({name: 'community',\r\n    initialState, \r\n    reducers: {\r\n        setPosts: (state, action)=>\r\n        {\r\n            state.posts=action.payload\r\n        },\r\n        addPost: (state, action)=>\r\n        {\r\n            state.posts.push(action.payload)\r\n        },\r\n        clearPosts: (state, action)=>\r\n        {\r\n            state.posts.splice(0, state.posts.length)\r\n        },\r\n        setName: (state, action)=>\r\n        {\r\n            state.name=action.payload\r\n        },\r\n        setDescription: (state, action)=>\r\n        {\r\n            state.description=action.payload\r\n        },\r\n        setMembers: (state, action)=>\r\n        {\r\n            state.members=action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setPosts, addPost, clearPosts, setName, setDescription, setMembers}=communitySlice.actions\r\n\r\n//Selectors\r\nexport const selectAllPosts=(state)=>state.community.posts\r\n\r\nexport const selectName=(state)=>state.community.name\r\n\r\nexport const selectDescription=(state)=>state.community.description\r\n\r\nexport const selectMembers=(state)=>state.community.members\r\n\r\n\r\n\r\n//Thunks\r\nexport const loadPosts=(communityId, setLoading)=>async (dispatch, getState)=>\r\n{\r\n    const {data}=await api.getCommunityPosts(communityId)\r\n    dispatch(setPosts(data.posts))\r\n    dispatch(setName(data.name))\r\n    dispatch(setDescription(data.description))\r\n    dispatch(setMembers(data.members))\r\n    setLoading(false)\r\n}\r\n\r\nexport const createPost=(postData, router)=>async (dispatch, getState)=>\r\n{\r\n    try{\r\n        const {data}=await api.createPost(postData)\r\n        console.log(data)\r\n        dispatch(addPost(data))\r\n        router.push('/community/'+postData.parentId)\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default communitySlice.reducer","import React,{useState, useEffect} from 'react'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nimport {XIcon} from '@heroicons/react/outline'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost } from '../../slices/communitySlice'\r\nimport { useHistory } from 'react-router'\r\n\r\nexport default function Editor({id, setEditor}) {\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const [quill, setQuill]=useState(null)\r\n    const [title, setTitle]=useState('')\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const postContents=(e)=>\r\n    {\r\n        e.preventDefault()\r\n        var content=quill.root.innerHTML\r\n        console.log(content)\r\n        const formData={\r\n            title: title,\r\n            body: content,\r\n            poster: user.result._id,\r\n            parentId: id\r\n        }\r\n        console.log(formData)\r\n        dispatch(createPost(formData, history))\r\n\r\n    }\r\n\r\n    const handleTitleChange=(e)=>\r\n    {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    useEffect(()=>\r\n    {\r\n        var newQuill=new Quill('#editor', {\r\n            modules: {\r\n                toolbar: [\r\n                    [{'font':[]}],\r\n                  [{ header: [1, 2, false] }],\r\n                  ['bold', 'italic', 'underline'],\r\n                  ['link','blockquote'],\r\n                  [{ 'align': [] }],\r\n                  [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n                  [{ 'color': [] }, { 'background': [] }],\r\n                  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n                  \r\n                ]\r\n              },\r\n            placeholder: 'What is on your mind?',\r\n            theme: 'snow'\r\n        })\r\n        if (newQuill)\r\n        {\r\n            setQuill(newQuill)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"h-24 mb-10\">\r\n            Create Post!\r\n           <XIcon onClick={()=>setEditor(false)} className=\"h-6 w-6 float-right mt-2 cursor-pointer\"/>\r\n            <input onChange={handleTitleChange} className=\"shadow appearance-none border rounded mt-3 w-full py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:border-transparent\" type=\"text\" placeholder=\"Title\"/>\r\n\r\n            <div id=\"editor\" >\r\n            \r\n            </div>\r\n            <button onClick={postContents} className=\"p-2 mt-0 border-black border-2 w-full hover:bg-black hover:ring-2 hover:ring-black hover:text-white\">\r\n                            POST\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport * as api from '../api/api';\r\n\r\nconst initialState={\r\n    title: \"\",\r\n    replies: [],\r\n    upvotes: 0,\r\n    downvotes: 0,\r\n    poster: \"\",\r\n    body: \"\"\r\n}\r\n\r\nexport const postSlice=createSlice({name: 'post', initialState,\r\n    reducers: {\r\n        setPost: (state, action)=>\r\n        {\r\n            console.log(\"We have reached the reducer\")\r\n            console.log(action.payload.replies)\r\n            state.title=action.payload.title\r\n            state.body=action.payload.body\r\n            state.replies=action.payload.replies\r\n            state.upvotes=action.payload.upvotes\r\n            state.downvotes=action.payload.downvotes\r\n            state.poster=action.payload.poster\r\n        },\r\n        addReplies: (state, action)=>\r\n        {\r\n            console.log(action.payload)\r\n            state.replies.push(action.payload)\r\n        },\r\n        addThread: (state, action)=>\r\n        {\r\n            console.log(action.payload)\r\n            for (var i=0;i<state.replies.length;i++)\r\n            {\r\n                if (state.replies[i]._id==action.payload.replyId)\r\n                {\r\n                    state.replies[i]=action.payload.thread\r\n                }\r\n            }\r\n        },\r\n        upvotePost: (state, action)=>\r\n        {\r\n            console.log(\"Upvoting\")\r\n            state.upvotes=state.upvotes+1\r\n        },\r\n        downvotePost: (state, action)=>\r\n        {\r\n            console.log(\"Downvoting\")\r\n            state.downvotes=state.downvotes+1\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setPost, addReplies, addThread, upvotePost, downvotePost}=postSlice.actions\r\n\r\n\r\n//Selectors\r\nexport const selectReplies=(state)=>state.post.replies\r\n\r\nexport const selectTitle=(state)=>state.post.title\r\n\r\nexport const selectBody=(state)=>state.post.body\r\n\r\nexport const selectVotes=(state)=>{\r\n    const votes={\r\n        upvotes: state.post.upvotes,\r\n        downvotes: state.post.downvotes\r\n    }\r\n\r\n    return votes\r\n}\r\n\r\n//Thunks\r\nexport const loadPost=(postId, setLoading)=>async (dispatch, getState)=>\r\n{\r\n    console.log('The post is trying to load')\r\n    try{\r\n        const {data}=await api.getPost(postId)\r\n        console.log(data)\r\n        dispatch(setPost(data))\r\n        setLoading(false)\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\nexport const postReply=(replyData)=>async (dispatch, getState)=>\r\n{\r\n    console.log('Reply process started')\r\n    try{\r\n        const {data}=await api.postReply(replyData)\r\n        dispatch(addReplies(data))\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const postThread=(threadData)=>async (dispatch, getState)=>\r\n{\r\n    console.log(\"Thread proceses started\")\r\n    console.log(threadData)\r\n    try{\r\n        const {data}=await api.postThread(threadData)\r\n        console.log(data)\r\n        console.log(\"Thread added on server\")\r\n        dispatch(addThread({thread: data, replyId: threadData.parentId}))\r\n    }\r\n    catch(error)\r\n    {\r\n\r\n    }\r\n}\r\n\r\nexport const asyncUpvote=(id)=>async (dispatch, getState)=>\r\n{\r\n    console.log(\"Upvoting post\")\r\n    try{\r\n        const {data}=await api.upvote(id)\r\n        dispatch(upvotePost(data))\r\n\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n    \r\n}\r\n\r\nexport const asyncDownvote=(id)=>async (dispatch, getState)=>\r\n{\r\n    console.log(\"Downvoting post\")\r\n    try{\r\n        const {data}=await api.downvote(id)\r\n        dispatch(downvotePost(data))\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport default postSlice.reducer","import React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport sanitize from 'sanitize-html'\r\nimport { ArrowUpIcon, ArrowDownIcon } from '@heroicons/react/outline'\r\nimport { asyncDownvote, asyncUpvote } from '../../slices/postSlice'\r\n\r\nexport default function PostShort({title, body, upvotes, downvotes, poster, replies, id}) {\r\n    const history=useHistory()\r\n    const dispatch=useDispatch()\r\n    const createContent=()=>\r\n    {\r\n        return {__html: body}\r\n    }\r\n    const cleanBody=sanitize(body,{\r\n        allowedTags: [],\r\n        allowedAttributes: {}\r\n    })\r\n\r\n    const openFull=()=>\r\n    {\r\n        history.push(`/post/${id}`)\r\n    }\r\n\r\n    const handleUpvote=()=>\r\n    {\r\n        dispatch(asyncUpvote(id))\r\n    }\r\n\r\n    const handleDownvote=()=>\r\n    {\r\n        dispatch(asyncDownvote(id))\r\n    }\r\n    return (\r\n        <div className=\"p-5 grid grid-cols-12 border-2 w-full shadow-md bg-white mt-5\">\r\n            <div className=''>\r\n            <ArrowUpIcon onClick={handleUpvote} className=\"h-6 w-6 hover:text-blue-600 block cursor-pointer\"/>\r\n            <span className=\"block ml-2\">{upvotes-downvotes?upvotes-downvotes:0}</span>\r\n            <ArrowDownIcon onClick={handleDownvote} className=\"h-6 w-6 hover:text-red-600 block mt-2 cursor-pointer\"/>\r\n            </div>\r\n            \r\n            <div className=\"cursor-pointer col-span-10\" onClick={openFull}>\r\n                <h2 className=\"font-semibold text-lg\"> {title} </h2> \r\n                <div className=\"col-span-5\">{cleanBody}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { loadPosts, selectAllPosts, selectDescription, selectMembers, selectName } from '../../slices/communitySlice'\r\nimport { useParams } from 'react-router'\r\nimport Editor from './Editor'\r\nimport PostShort from '../Post/PostShort'\r\nimport { selectAllCommunities, selectCommunity } from '../../slices/forumSlice'\r\nimport Loader from 'react-loader-spinner'\r\nimport PostsMapper from './PostsMapper'\r\n\r\n\r\nexport default function CommunityExpanded() {\r\n    const posts=useSelector(selectAllPosts)\r\n    const name=useSelector(selectName)\r\n    const description=useSelector(selectDescription)\r\n    const members=useSelector(selectMembers)\r\n    const {id} =useParams()\r\n    //const community=useSelector((state, id)=>(state.communities.list))\r\n\r\n    const dispatch=useDispatch()\r\n    \r\n    const [editor, setEditor]=useState(false)\r\n    const [loading, setLoading]=useState(true)\r\n    \r\n\r\n\r\n    useEffect(()=>\r\n    {\r\n        console.log(id)\r\n        dispatch(loadPosts(id, setLoading))\r\n        console.log(posts)\r\n        \r\n        \r\n\r\n    }, [])\r\n    return (\r\n        \r\n        <div className=\"grid grid-cols-7\">\r\n            <button onClick={()=>console.log(posts)}>Click me</button>\r\n            <div className=\"bg-gray-300\"></div>\r\n            <div className=\"grid col-span-5 grid-cols-3 bg-gray-300\">\r\n                <div className=\"bg-gray-300 h-8 p-10 w-full col-span-3\"></div>\r\n                <div className=\"col-span-3 md:col-span-2 bg-gray-300\">\r\n                    <h1 className=\"text-4xl font-bold bg-white p-5 border-2\">{name}</h1>\r\n                    <div className={`p-5 ${editor?\"pb-64\":\"\"} border-2 w-full shadow-md bg-white mt-5 mb-10`} >\r\n                        {editor?<Editor id={id} setEditor={setEditor} />:<div>Create a post!\r\n                        <input onClick={()=>setEditor(true)} className=\"shadow appearance-none border rounded mt-3 w-full py-2 px-3 mb-5 text-gray-700 leading-tight focus:outline-none focus:ring-2 focus:ring-blue-200 focus:border-transparent\" type=\"text\" placeholder=\"Create Post\"/> </div>}\r\n                    </div>\r\n                   \r\n                    {loading?<div className=\"grid place-items-center mt-10\"><Loader className=\"\" type=\"Bars\" color=\"#50524d\" height={80} width={80} /></div>: posts.slice(0).reverse().map((post)=>(\r\n                            <PostShort title={post.title} poster={post.poster} body={post.body} replies={post.replies} upvotes={post.upvotes} downvotes={post.downvotes} id={post._id}/>\r\n                        ))\r\n                       }\r\n\r\n                       \r\n                    \r\n                </div>\r\n                <div className=\"shadow-md md:visible invisible ml-2 bg-white\">\r\n                    <p className=\"bg-gray-400 w-full text-white text-center font-bold\">About Community</p>\r\n                    <p className=\"mt-10 text-center\">{description} </p>\r\n                    <p className=\"font-semibold text-center\">Posts: {posts?posts.length:0} Members: {members?members.length:0}</p>\r\n                    <div className=\"flex align-items-center\"><button onClick={()=>setEditor(true)} className=\"rounded-xl m-auto bg-gray-400 p-3 p-3 mt-3 font-semibold hover:bg-gray-600 text-white w-1/2\">Create Post</button></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-300\"></div>\r\n\r\n        </div>\r\n    ) \r\n}\r\n\r\n\r\n/*\r\nposts.map((post)=>\r\n              {\r\n                return (<div>{post.title}</div>)\r\n              }) */","import React,{useState, useEffect} from 'react'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nimport {XIcon} from '@heroicons/react/outline'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost } from '../../slices/communitySlice'\r\nimport { useHistory } from 'react-router'\r\nimport { postReply } from '../../slices/postSlice'\r\n\r\nexport default function ReplyEditor({id}) {\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const [quill, setQuill]=useState(null)\r\n    const [title, setTitle]=useState('')\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const postThread=(e)=>\r\n    {\r\n        e.preventDefault()\r\n        var content=quill.root.innerHTML\r\n        const formData={\r\n            body: content, \r\n            poster: user.result._id,\r\n            parentId: id\r\n        }\r\n        dispatch(postReply(formData))\r\n\r\n    }\r\n\r\n    useEffect(()=>\r\n    {\r\n        var newQuill=new Quill('#editor', {\r\n            modules: {\r\n                toolbar: [\r\n                    [{'font':[]}],\r\n                  [{ header: [1, 2, false] }],\r\n                  ['bold', 'italic', 'underline'],\r\n                  ['link','blockquote'],\r\n                  [{ 'align': [] }],\r\n                  [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n                  [{ 'color': [] }, { 'background': [] }],\r\n                  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n                  \r\n                ]\r\n              },\r\n            placeholder: 'What are your thoughts?',\r\n            theme: 'snow'\r\n        })\r\n        if (newQuill)\r\n        {\r\n            setQuill(newQuill)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"h-44\">\r\n           \r\n            <div id=\"editor\" >\r\n            \r\n            </div>\r\n            <button onClick={postThread} className=\"p-2 mt-0 border-black border-2 float-right hover:bg-black hover:ring-2 hover:ring-black hover:text-white\">\r\n                            POST\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React,{useState, useEffect} from 'react'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nimport {XIcon} from '@heroicons/react/outline'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost } from '../../slices/communitySlice'\r\nimport { useHistory } from 'react-router'\r\nimport { postReply } from '../../slices/postSlice'\r\nimport * as api from '../../api/api'\r\n\r\nexport default function ThreadEditor({id, parent, setParent, setEditor}) {\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const [quill, setQuill]=useState(null)\r\n    const [title, setTitle]=useState('')\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const postThread=async (e)=>\r\n    {\r\n        e.preventDefault()\r\n        var content=quill.root.innerHTML\r\n        const formData={\r\n            body: content, \r\n            poster: user.result._id,\r\n            parentId: id\r\n        }\r\n\r\n        const {data}=await api.postThread(formData)\r\n        console.log(\"Reply added successfully\")\r\n        if (setParent)\r\n        {\r\n            setParent(data.replies)\r\n        }\r\n        if (setEditor)\r\n        {\r\n            setEditor(false)\r\n        }\r\n        \r\n        \r\n\r\n    }\r\n\r\n    useEffect(()=>\r\n    {\r\n        var newQuill=new Quill('#thread-editor', {\r\n            modules: {\r\n                toolbar: [\r\n                    [{'font':[]}],\r\n                  [{ header: [1, 2, false] }],\r\n                  ['bold', 'italic', 'underline'],\r\n                  ['link','blockquote'],\r\n                  [{ 'align': [] }],\r\n                  [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n                  [{ 'color': [] }, { 'background': [] }],\r\n                  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n                  \r\n                ]\r\n              },\r\n            placeholder: 'What are your thoughts?',\r\n            theme: 'snow'\r\n        })\r\n        if (newQuill)\r\n        {\r\n            setQuill(newQuill)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"h-32\">\r\n           \r\n            <div id=\"thread-editor\" >\r\n            \r\n            </div>\r\n            <button onClick={postThread} className=\"p-2 mt-0 border-black border-2 float-right hover:bg-black hover:ring-2 hover:ring-black hover:text-white\">\r\n                            POST\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { ReplyIcon, ChatIcon, ArrowUpIcon, ArrowDownIcon, DotsVerticalIcon } from '@heroicons/react/outline'\r\nimport * as api from '../../api/api'\r\nimport ThreadEditor from './ThreadEditor'\r\n\r\nexport default function Thread({thread}) {\r\n    const [showReplies, setShowReplies]=useState(false)\r\n    const [editor, setEditor]=useState(false)\r\n    const [replies, setReplies]=useState([])\r\n    const [username, setUsername]=useState('')\r\n    const [avatar, setAvatar]=useState('https://avatars.dicebear.com/api/bottts/Sam Houser.svg')\r\n    useEffect(async ()=>{\r\n        console.log(\"in a thread\")\r\n        console.log(thread)\r\n        const {data}=await api.getThreadById(thread._id)\r\n        console.log(data)\r\n        setReplies(data.replies)\r\n        setUsername(data.poster.username)\r\n        setAvatar(data.poster.avatar)\r\n        console.log(replies)\r\n    }, [])\r\n\r\n    const handleEditor=()=>\r\n    {\r\n        setEditor(!editor)\r\n    }\r\n    const createThreadContent=(replyBody)=>\r\n    {\r\n        return {__html: replyBody}\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ml-3 font-light font-sm \">\r\n                    <img    \r\n                    className=\"h-4 w-4 rounded-full inline\"\r\n                        src={avatar}\r\n                        alt=\"\"\r\n                      />\r\n                {username}</div>\r\n            <div className=\"ml-3 p-5 \" dangerouslySetInnerHTML={createThreadContent(thread.body)}>\r\n            \r\n            </div>\r\n            <div className=\"grid grid-cols-5 border-b-2 border-gray-200\">\r\n                            <div className=\"col-span-4\"></div>\r\n                            <div className=\"\">\r\n                            <ArrowUpIcon className=\"h-4 w-4 m-2 hover:text-blue-600 inline cursor-pointer\"/>\r\n                            <ArrowDownIcon className=\"h-4 w-4 m-2 hover:text-red-600 inline cursor-pointer\"/>\r\n                                <button onClick={handleEditor} className=\"hover:bg-gray-200 m-2\">\r\n                                    <ChatIcon className=\"h-4 w-4 inline\" />\r\n                                    Reply\r\n                                </button>\r\n                                <DotsVerticalIcon className=\"h-4 w-4 inline cursor-pointer hover:bg-gray-200\"/>\r\n                                \r\n                            </div>\r\n                            \r\n                                            \r\n            </div>\r\n            {editor?<ThreadEditor id={thread._id} parent={replies} setParent={setReplies} setEditor={setEditor}/>:<div></div>}\r\n            {\r\n                                replies.map((child)=>(<div className=\"ml-5\"><Thread thread={child} /></div>))\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React,{useState, useEffect} from 'react'\r\nimport 'quill/dist/quill.snow.css'\r\nimport Quill from 'quill'\r\nimport {XIcon} from '@heroicons/react/outline'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost } from '../../slices/communitySlice'\r\nimport { useHistory } from 'react-router'\r\nimport { postReply, postThread } from '../../slices/postSlice'\r\nimport * as api from '../../api/api'\r\n\r\nexport default function ReplyThreadEditor({id, setEditor}) {\r\n    const dispatch=useDispatch()\r\n    const history=useHistory()\r\n    const [quill, setQuill]=useState(null)\r\n    const [title, setTitle]=useState('')\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    const handleSubmit=async (e)=>\r\n    {\r\n        e.preventDefault()\r\n        var content=quill.root.innerHTML\r\n        const formData={\r\n            body: content, \r\n            poster: user.result._id,\r\n            parentId: id\r\n        }\r\n\r\n       dispatch(postThread(formData))\r\n       setEditor(false)\r\n\r\n        \r\n        \r\n\r\n    }\r\n\r\n    useEffect(()=>\r\n    {\r\n        var newQuill=new Quill('#thread-editor', {\r\n            modules: {\r\n                toolbar: [\r\n                    [{'font':[]}],\r\n                  [{ header: [1, 2, false] }],\r\n                  ['bold', 'italic', 'underline'],\r\n                  ['link','blockquote'],\r\n                  [{ 'align': [] }],\r\n                  [{ 'indent': '-1'}, { 'indent': '+1' }],\r\n                  [{ 'color': [] }, { 'background': [] }],\r\n                  [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n                  \r\n                ]\r\n              },\r\n            placeholder: 'What are your thoughts?',\r\n            theme: 'snow'\r\n        })\r\n        if (newQuill)\r\n        {\r\n            setQuill(newQuill)\r\n        }\r\n    }, [])\r\n    return (\r\n        <div className=\"h-32\">\r\n           \r\n            <div id=\"thread-editor\" >\r\n            \r\n            </div>\r\n            <button onClick={handleSubmit} className=\"p-2 mt-0 border-black border-2 float-right hover:bg-black hover:ring-2 hover:ring-black hover:text-white\">\r\n                            POST\r\n            </button>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Thread from './Thread'\r\nimport { ReplyIcon, ChatIcon, ArrowUpIcon, ArrowDownIcon, DotsVerticalIcon } from '@heroicons/react/outline'\r\nimport ReplyThreadEditor from './ReplyThreadEditor'\r\n\r\n\r\nexport default function Reply({reply}) {\r\n    const [editor, setEditor]=useState(false)\r\n    const handleEditor=()=>\r\n    {\r\n        setEditor(!editor)\r\n    }\r\n    const createThreadContent=(replyBody)=>\r\n    {\r\n        return {__html: replyBody}\r\n    }\r\n    useEffect(()=>\r\n    {\r\n        console.log('Printing reply')\r\n        console.log(reply)\r\n        console.log(\"The username is \"+reply.poster.username)\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"p-5\">\r\n                    <img    \r\n                    className=\"h-4 w-4 rounded-full inline\"\r\n                        src={reply.poster.avatar?reply.poster.avatar:'https://avatars.dicebear.com/api/bottts/Sam Houser.svg'}\r\n                        alt=\"\"\r\n                      />\r\n                    <div className=\"inline font-light font-sm \">{reply?reply.poster.username:\"\"}</div>\r\n                    <div className=\"\" dangerouslySetInnerHTML={createThreadContent(reply.body)}>\r\n                        \r\n                    </div>\r\n                        <div className=\"grid grid-cols-5\">\r\n                            <div className=\"col-span-4\"></div>\r\n                            <div className=\"\">\r\n                            <ArrowUpIcon className=\"h-4 w-4 m-2 hover:text-blue-600 inline cursor-pointer\"/>\r\n                            <ArrowDownIcon className=\"h-4 w-4 m-2 hover:text-red-600 inline cursor-pointer\"/>\r\n                                <button onClick={handleEditor} className=\"hover:bg-gray-200 m-2\">\r\n                                    <ChatIcon className=\"h-4 w-4 inline\" />\r\n                                    Reply\r\n                                </button>\r\n                                <DotsVerticalIcon className=\"h-4 w-4 inline cursor-pointer hover:bg-gray-200\"/>\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                        \r\n                        {editor?<ReplyThreadEditor id={reply._id} setEditor={setEditor}/>:<div></div>}\r\n            </div>\r\n            \r\n            {\r\n                reply.replies.map((thread)=>(<div className=\"ml-5\"><Thread thread={thread}/></div>))\r\n            }\r\n            \r\n            \r\n        </div>\r\n       \r\n    )\r\n}\r\n","import React,{useEffect, useState} from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\nimport { loadPost, selectBody, selectReplies, selectTitle, selectVotes } from '../../slices/postSlice'\r\nimport ReplyEditor from '../Thread/ReplyEditor'\r\nimport {ArrowUpIcon, ArrowDownIcon} from '@heroicons/react/outline'\r\nimport Reply from '../Thread/Reply'\r\nimport { selectAllPosts, selectPostById } from '../../slices/communitySlice'\r\nimport Loader from 'react-loader-spinner'\r\nimport { asyncUpvote, asyncDownvote } from '../../slices/postSlice'\r\n\r\nexport default function PostExpanded() {\r\n    const dispatch = useDispatch()\r\n    const {id}=useParams()\r\n    const title=useSelector(selectTitle)\r\n    const body=useSelector(selectBody)\r\n    const replies=useSelector(selectReplies)\r\n    const votes=useSelector(selectVotes)\r\n    const posts=useSelector(selectAllPosts)\r\n    const post=posts.find((item)=>item._id==id)\r\n    \r\n    const [loading, setLoading]=useState(true)\r\n    useEffect(()=>\r\n    {\r\n        dispatch(loadPost(id, setLoading))\r\n        console.log(replies)\r\n        console.log(\"Printing this post\")\r\n        console.log(post)\r\n        \r\n    }, [])\r\n\r\n    const createContent=()=>\r\n    {\r\n        return {__html: post.body}\r\n    }\r\n\r\n    const handleUpvote=()=>\r\n    {\r\n        dispatch(asyncUpvote(id))\r\n    }\r\n\r\n    const handleDownvote=()=>\r\n    {\r\n        dispatch(asyncDownvote(id))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"bg-gray-300 h-full grid grid-cols-5 gap-2\">\r\n            <div></div>\r\n            <div className=\"bg-white col-span-5 md:col-span-3 border-2 w-full shadow-md p-5\">\r\n                <h1 className=\"text-xl font-medium\">{post.title}</h1>\r\n                <div className=\"mt-5\" dangerouslySetInnerHTML={createContent()}>\r\n                </div>\r\n                <div className=\"font-semibold mb-5 mt-5\">\r\n                <ArrowUpIcon onClick={handleUpvote} className=\"h-6 w-6 hover:text-blue-600 inline cursor-pointer\"/>{votes.upvotes-votes.downvotes}<ArrowDownIcon onClick={handleDownvote} className=\"h-6 w-6 hover:text-red-600 inline cursor-pointer\"/>\r\n                </div>\r\n\r\n                <div className=\"mt-5 mb-5 p-5\">\r\n                    <ReplyEditor id={id}/>\r\n                </div>\r\n                {loading?<div className=\"grid place-items-center mt-20\"><Loader className=\"\" type=\"Bars\" color=\"#50524d\" height={80} width={80} /></div>: <div className=\"grid mt-32 grid-cols-1 divide-y divide-gray-200\">\r\n                    {\r\n                        replies.map((reply)=>(<Reply reply={reply}/>))\r\n                    }\r\n        \r\n                </div>\r\n                       }\r\n                \r\n\r\n            </div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport { getPostsByUserId } from '../../api/api'\r\nimport PostShort from '../Post/PostShort'\r\n\r\nexport default function Profile() {\r\n    const [posts, setPosts]=useState([])\r\n    const user=JSON.parse(localStorage.getItem('gabprofile'))\r\n    useEffect(async ()=>\r\n    {\r\n        console.log(user.result._id)\r\n        const {data}=await getPostsByUserId(user.result._id)\r\n        console.log(data)\r\n        setPosts(data)\r\n    },[])\r\n\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-7\">\r\n            <div className=\"bg-gray-300\"></div>\r\n            <div className=\"grid grid-cols-3 col-span-5 bg-gray-300\">\r\n                <div className=\"bg-gray-300 h-8 p-10 w-full col-span-3\"></div>\r\n\r\n                <div className=\"col-span-3 md:col-span-2 bg-gray-300\">\r\n                    <h1 className=\"text-4xl font-bold bg-white p-5 border-2\">{user.result.name}</h1>\r\n                    {posts? posts.slice(0).reverse().map((post)=>(\r\n                            <PostShort title={post.title} poster={post.poster} body={post.body} replies={post.replies} id={post._id}/>\r\n                        ))\r\n                    :<div></div>}\r\n                </div>\r\n                <div className=\"shadow-md md:visible invisible ml-2 bg-white\">\r\n                    <img src={user.result.avatar} />\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-300\"></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {setCommunities, selectAllCommunities, clearCommunities, addCommunity} from './slices/forumSlice'\nimport Home from './components/Home/Home'\nimport Navbar from './components/Nav/Navbar';\nimport Login from './components/Home/Login';\nimport Feed from './components/Feed/Feed';\nimport CreateCommunity from './components/Community/CreateCommunity';\nimport AllCommunities from './components/Community/AllCommunities';\nimport JoinedCommunities from './components/Community/JoinedCommunities';\nimport { joinCommunity } from './api/api';\nimport CommunityExpanded from './components/Community/CommunityExpanded';\nimport PostExpanded from './components/Post/PostExpanded';\nimport Profile from './components/Home/Profile';\nimport { loadCommunities } from './slices/forumSlice';\n\n\n\nfunction App() {\n  const user=JSON.parse(localStorage.getItem('gabprofile'))\n  const dispatch=useDispatch()\n\n\n  \n\n  return (\n    <Router>\n        <div>\n        <Navbar />\n\n        <Switch>\n\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n\n          <Route path=\"/login\">\n              <Login />\n          </Route>\n\n          <Route path='/feed'>\n            <Feed />\n          </Route>\n\n          <Route path='/create/community'>\n              <CreateCommunity />\n          </Route>\n\n          <Route path='/communities/all'>\n              <AllCommunities />\n          </Route>\n\n          <Route path='/communities/joined'>\n            <JoinedCommunities />\n          </Route>\n\n          <Route path='/community/:id'>\n            <CommunityExpanded />\n          </Route>\n\n        <Route path='/post/:id'>\n          <PostExpanded />\n        </Route>\n\n        <Route path='/profile'>\n          <Profile />\n        </Route>\n\n      \n        </Switch>     \n        </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport communitiesReducer from '../slices/forumSlice'\r\nimport communityReducer from '../slices/communitySlice'\r\nimport postReducer from '../slices/postSlice'\r\n\r\nexport const store=configureStore({\r\n    reducer: {\r\n        communities: communitiesReducer,\r\n        community: communityReducer,\r\n        post: postReducer\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}